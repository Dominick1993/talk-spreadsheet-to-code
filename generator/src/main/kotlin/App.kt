package dev.labuda.spreadsheets

import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.TypeSpec
import dev.labuda.spreadsheets.api.ExternalThreatTypeMapping
import dev.labuda.spreadsheets.file.OurThreatTypeMapping
import java.nio.file.Path

private const val RESOLVER_NAME = "GeneratedThreatTypeResolver"

fun main(args: Array<String>) {
    val pathToGenerateSource = args.getOrNull(0) ?: "generated-demo/src/main/kotlin/"

    val externalThreatTypeMapping = ExternalThreatTypeMapping()

    val threatTypeResolverClass =
        FileSpec.builder("dev.labuda.spreadhseets.generated", RESOLVER_NAME)
            .addFileComment("WARNING! This file is automatically generated and should not be manually modified!")
            .addType(externalThreatTypeMapping.mitreTacticType)
            .addType(OurThreatTypeMapping.detectionType)
            .addType(
                TypeSpec.objectBuilder(RESOLVER_NAME)
                    .addFunction(OurThreatTypeMapping.getNameFunction())
                    .addFunction(externalThreatTypeMapping.getMitreTacticsFunction())
                    .addFunction(OurThreatTypeMapping.getDescriptionFunction())
                    .addFunction(OurThreatTypeMapping.getRecommendedInvestigationFunction())
                    .addFunction(OurThreatTypeMapping.getRemediationStepsFunction())
                    .addFunction(OurThreatTypeMapping.getDetectionTypeFunction())
                    .build()
            )
            .build()

    threatTypeResolverClass.writeTo(Path.of(pathToGenerateSource))
}
